{
    "docs": [
        {
            "location": "/", 
            "text": "TERMIOS\n\n\n \n \n \n \n\n\nThis package provides an interface to the POSIX calls for tty I/O control.\n\n\n\n\nThe termios functions describe a general terminal interface that is\n\n\n\n\nprovided to control asynchronous communications ports.\n\n\nFor a complete description of these calls, see the \ntermios(3)\n manual page.\n\n\nAll functions in this package take a \nRawFD\n file descriptor \nfd\n as their first argument. This can also be an integer file descriptor or a concrete instance of \nBase.LibuvStream\n, such as \nstdin\n or \nstdout\n.\n\n\nThis package defines the constants needed to work with the functions provided. You may need to refer to your system documentation for more information on using this package.", 
            "title": "Home"
        }, 
        {
            "location": "/#termios", 
            "text": "This package provides an interface to the POSIX calls for tty I/O control.   The termios functions describe a general terminal interface that is   provided to control asynchronous communications ports.  For a complete description of these calls, see the  termios(3)  manual page.  All functions in this package take a  RawFD  file descriptor  fd  as their first argument. This can also be an integer file descriptor or a concrete instance of  Base.LibuvStream , such as  stdin  or  stdout .  This package defines the constants needed to work with the functions provided. You may need to refer to your system documentation for more information on using this package.", 
            "title": "TERMIOS"
        }, 
        {
            "location": "/usage/", 
            "text": "Usage\n\n\n\n\nAPI\n\n\n#\n\n\nTERMIOS.TERMIOS\n \n \nModule\n.\n\n\nThis package provides an interface to the POSIX calls for tty I/O control.\n\n\nFor a complete description of these calls, see the \ntermios(3)\n manual page.\n\n\nUsage\n\n\nExample:\n\n\nusing TERMIOS\n\n\nconst T = TERMIOS\n\n\nterm_stdin = T.termios()\n\n\nT.tcgetattr(stdin, term_stdin)\n\n\nterm_stdin.c_iflag |= T.IGNBRK\n\n\nT.tcsetattr(stdin, T.TCSANOW, term_stdin)\n\n\n\n\n\n\nsource\n\n\n#\n\n\nTERMIOS.ALTWERASE\n \n \nConstant\n.\n\n\nUse alternate WERASE algorithm\n\n\nsource\n\n\n#\n\n\nTERMIOS.BRKINT\n \n \nConstant\n.\n\n\nMap BREAK to SIGINTR\n\n\nsource\n\n\n#\n\n\nTERMIOS.BS0\n \n \nConstant\n.\n\n\nBS delay type 0.\n\n\nsource\n\n\n#\n\n\nTERMIOS.BS1\n \n \nConstant\n.\n\n\nBS delay type 1.\n\n\nsource\n\n\n#\n\n\nTERMIOS.CCAR_OFLOW\n \n \nConstant\n.\n\n\nDCD flow control of output\n\n\nsource\n\n\n#\n\n\nTERMIOS.CCTS_OFLOW\n \n \nConstant\n.\n\n\nCTS flow control of output\n\n\nsource\n\n\n#\n\n\nTERMIOS.CDSR_OFLOW\n \n \nConstant\n.\n\n\nDSR flow control of output\n\n\nsource\n\n\n#\n\n\nTERMIOS.CDTR_IFLOW\n \n \nConstant\n.\n\n\nDTR flow control of input\n\n\nsource\n\n\n#\n\n\nTERMIOS.CIGNORE\n \n \nConstant\n.\n\n\nIgnore control flags\n\n\nsource\n\n\n#\n\n\nTERMIOS.CLOCAL\n \n \nConstant\n.\n\n\nIgnore modem status lines\n\n\nsource\n\n\n#\n\n\nTERMIOS.CR0\n \n \nConstant\n.\n\n\nCR delay type 0.\n\n\nsource\n\n\n#\n\n\nTERMIOS.CR1\n \n \nConstant\n.\n\n\nCR delay type 1.\n\n\nsource\n\n\n#\n\n\nTERMIOS.CR2\n \n \nConstant\n.\n\n\nCR delay type 2.\n\n\nsource\n\n\n#\n\n\nTERMIOS.CR3\n \n \nConstant\n.\n\n\nCR delay type 3.\n\n\nsource\n\n\n#\n\n\nTERMIOS.CREAD\n \n \nConstant\n.\n\n\nEnable receiver\n\n\nsource\n\n\n#\n\n\nTERMIOS.CRTS_IFLOW\n \n \nConstant\n.\n\n\nRTS flow control of input\n\n\nsource\n\n\n#\n\n\nTERMIOS.CS5\n \n \nConstant\n.\n\n\n5 bits (pseudo)\n\n\nsource\n\n\n#\n\n\nTERMIOS.CS6\n \n \nConstant\n.\n\n\n6 bits\n\n\nsource\n\n\n#\n\n\nTERMIOS.CS7\n \n \nConstant\n.\n\n\n7 bits\n\n\nsource\n\n\n#\n\n\nTERMIOS.CS8\n \n \nConstant\n.\n\n\n8 bits\n\n\nsource\n\n\n#\n\n\nTERMIOS.CSIZE\n \n \nConstant\n.\n\n\nCharacter size mask\n\n\nsource\n\n\n#\n\n\nTERMIOS.CSTOPB\n \n \nConstant\n.\n\n\nSend 2 stop bits\n\n\nsource\n\n\n#\n\n\nTERMIOS.ECHO\n \n \nConstant\n.\n\n\nEnable echoing\n\n\nsource\n\n\n#\n\n\nTERMIOS.ECHOCTL\n \n \nConstant\n.\n\n\nEcho control chars as ^(Char)\n\n\nsource\n\n\n#\n\n\nTERMIOS.ECHOE\n \n \nConstant\n.\n\n\nVisually erase chars\n\n\nsource\n\n\n#\n\n\nTERMIOS.ECHOK\n \n \nConstant\n.\n\n\nEcho NL after line kill\n\n\nsource\n\n\n#\n\n\nTERMIOS.ECHOKE\n \n \nConstant\n.\n\n\nVisual erase for line kill\n\n\nsource\n\n\n#\n\n\nTERMIOS.ECHONL\n \n \nConstant\n.\n\n\nEcho NL even if ECHO is off\n\n\nsource\n\n\n#\n\n\nTERMIOS.ECHOPRT\n \n \nConstant\n.\n\n\nVisual erase mode for hardcopy\n\n\nsource\n\n\n#\n\n\nTERMIOS.EXTPROC\n \n \nConstant\n.\n\n\nExternal processing\n\n\nsource\n\n\n#\n\n\nTERMIOS.FF0\n \n \nConstant\n.\n\n\nFF delay type 0.\n\n\nsource\n\n\n#\n\n\nTERMIOS.FF1\n \n \nConstant\n.\n\n\nFF delay type 1.\n\n\nsource\n\n\n#\n\n\nTERMIOS.FFDLY\n \n \nConstant\n.\n\n\nForm feed delay\n\n\nsource\n\n\n#\n\n\nTERMIOS.FLUSHO\n \n \nConstant\n.\n\n\nOutput being flushed (state)\n\n\nsource\n\n\n#\n\n\nTERMIOS.HUPCL\n \n \nConstant\n.\n\n\nHang up on last close\n\n\nsource\n\n\n#\n\n\nTERMIOS.ICANON\n \n \nConstant\n.\n\n\nCanonicalize input lines\n\n\nsource\n\n\n#\n\n\nTERMIOS.ICRNL\n \n \nConstant\n.\n\n\nMap CR to NL (ala CRMOD)\n\n\nsource\n\n\n#\n\n\nTERMIOS.IEXTEN\n \n \nConstant\n.\n\n\nEnable DISCARD and LNEXT\n\n\nsource\n\n\n#\n\n\nTERMIOS.IGNBRK\n \n \nConstant\n.\n\n\nIgnore BREAK condition\n\n\nsource\n\n\n#\n\n\nTERMIOS.IGNCR\n \n \nConstant\n.\n\n\nIgnore CR\n\n\nsource\n\n\n#\n\n\nTERMIOS.IGNPAR\n \n \nConstant\n.\n\n\nIgnore (discard) parity errors\n\n\nsource\n\n\n#\n\n\nTERMIOS.IMAXBEL\n \n \nConstant\n.\n\n\nRing bell on input queue full\n\n\nsource\n\n\n#\n\n\nTERMIOS.INLCR\n \n \nConstant\n.\n\n\nMap NL into CR\n\n\nsource\n\n\n#\n\n\nTERMIOS.INPCK\n \n \nConstant\n.\n\n\nEnable checking of parity errors\n\n\nsource\n\n\n#\n\n\nTERMIOS.ISIG\n \n \nConstant\n.\n\n\nEnable signals INTR, QUIT, [D]SUSP\n\n\nsource\n\n\n#\n\n\nTERMIOS.ISTRIP\n \n \nConstant\n.\n\n\nStrip 8th bit off chars\n\n\nsource\n\n\n#\n\n\nTERMIOS.IUCLC\n \n \nConstant\n.\n\n\n(glibc) Translate upper case input to lower case.\n\n\nsource\n\n\n#\n\n\nTERMIOS.IUTF8\n \n \nConstant\n.\n\n\n(macos) maintain state for UTF-8 VERASE\n\n\nsource\n\n\n#\n\n\nTERMIOS.IXANY\n \n \nConstant\n.\n\n\nAny char will restart after stop\n\n\nsource\n\n\n#\n\n\nTERMIOS.IXOFF\n \n \nConstant\n.\n\n\nEnable input flow control\n\n\nsource\n\n\n#\n\n\nTERMIOS.IXON\n \n \nConstant\n.\n\n\nEnable output flow control\n\n\nsource\n\n\n#\n\n\nTERMIOS.MDMBUF\n \n \nConstant\n.\n\n\nOld name for CCAR_OFLOW\n\n\nsource\n\n\n#\n\n\nTERMIOS.NL0\n \n \nConstant\n.\n\n\nNL type 0.\n\n\nsource\n\n\n#\n\n\nTERMIOS.NOFLSH\n \n \nConstant\n.\n\n\nDon't flush after interrupt\n\n\nsource\n\n\n#\n\n\nTERMIOS.NOKERNINFO\n \n \nConstant\n.\n\n\nNo kernel output from VSTATUS\n\n\nsource\n\n\n#\n\n\nTERMIOS.OCRNL\n \n \nConstant\n.\n\n\nMap CR to NL on output\n\n\nsource\n\n\n#\n\n\nTERMIOS.OFDEL\n \n \nConstant\n.\n\n\nFill is DEL, else NUL\n\n\nsource\n\n\n#\n\n\nTERMIOS.OFILL\n \n \nConstant\n.\n\n\nUse fill characters for delay\n\n\nsource\n\n\n#\n\n\nTERMIOS.OLCUC\n \n \nConstant\n.\n\n\n(glibc) Translate lower case output to upper case.\n\n\nsource\n\n\n#\n\n\nTERMIOS.ONLCR\n \n \nConstant\n.\n\n\nMap NL to CR-NL (ala CRMOD)\n\n\nsource\n\n\n#\n\n\nTERMIOS.ONLRET\n \n \nConstant\n.\n\n\nNL performs CR function\n\n\nsource\n\n\n#\n\n\nTERMIOS.ONOCR\n \n \nConstant\n.\n\n\nNo CR output at column 0\n\n\nsource\n\n\n#\n\n\nTERMIOS.ONOEOT\n \n \nConstant\n.\n\n\nDiscard EOT's (^D) on output)\n\n\nsource\n\n\n#\n\n\nTERMIOS.OPOST\n \n \nConstant\n.\n\n\nEnable following output processing \n\n\nsource\n\n\n#\n\n\nTERMIOS.OXTABS\n \n \nConstant\n.\n\n\nExpand tabs to spaces\n\n\nsource\n\n\n#\n\n\nTERMIOS.PARENB\n \n \nConstant\n.\n\n\nParity enable\n\n\nsource\n\n\n#\n\n\nTERMIOS.PARMRK\n \n \nConstant\n.\n\n\nMark parity and framing errors\n\n\nsource\n\n\n#\n\n\nTERMIOS.PARODD\n \n \nConstant\n.\n\n\nOdd parity, else even\n\n\nsource\n\n\n#\n\n\nTERMIOS.PENDIN\n \n \nConstant\n.\n\n\nXXX retype pending input (state)\n\n\nsource\n\n\n#\n\n\nTERMIOS.TAB0\n \n \nConstant\n.\n\n\nTAB delay type 0.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TAB1\n \n \nConstant\n.\n\n\nTAB delay type 1.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TAB2\n \n \nConstant\n.\n\n\nTAB delay type 2.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TAB3\n \n \nConstant\n.\n\n\nExpand tabs to spaces.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TABDLY\n \n \nConstant\n.\n\n\nHorizontal tab delay\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCIFLUSH\n \n \nConstant\n.\n\n\nDiscard data received but not yet read.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCIOFF\n \n \nConstant\n.\n\n\nSend a STOP character.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCIOFLUSH\n \n \nConstant\n.\n\n\nDiscard all pending data.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCION\n \n \nConstant\n.\n\n\nSend a START character.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCOFLUSH\n \n \nConstant\n.\n\n\nDiscard data written but not yet sent.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCOOFF\n \n \nConstant\n.\n\n\nSuspend output.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCOON\n \n \nConstant\n.\n\n\nRestart suspended output.\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCSADRAIN\n \n \nConstant\n.\n\n\nDrain output, then change\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCSAFLUSH\n \n \nConstant\n.\n\n\nDrain output, flush input\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCSANOW\n \n \nConstant\n.\n\n\nMake change immediate\n\n\nsource\n\n\n#\n\n\nTERMIOS.TCSASOFT\n \n \nConstant\n.\n\n\nFlag - don't alter h.w. state\n\n\nsource\n\n\n#\n\n\nTERMIOS.TOSTOP\n \n \nConstant\n.\n\n\nStop background jobs from output\n\n\nsource\n\n\n#\n\n\nTERMIOS.VDISCARD\n \n \nConstant\n.\n\n\nDiscard character IEXTEN\n\n\nsource\n\n\n#\n\n\nTERMIOS.VDSUSP\n \n \nConstant\n.\n\n\nDelayed suspend character ISIG together with IEXTEN\n\n\nsource\n\n\n#\n\n\nTERMIOS.VEOF\n \n \nConstant\n.\n\n\nEnd-of-file character ICANON\n\n\nsource\n\n\n#\n\n\nTERMIOS.VEOL\n \n \nConstant\n.\n\n\nEnd-of-line character ICANON\n\n\nsource\n\n\n#\n\n\nTERMIOS.VEOL2\n \n \nConstant\n.\n\n\nSecond EOL character ICANON together with IEXTEN\n\n\nsource\n\n\n#\n\n\nTERMIOS.VERASE\n \n \nConstant\n.\n\n\nErase character ICANON\n\n\nsource\n\n\n#\n\n\nTERMIOS.VINTR\n \n \nConstant\n.\n\n\nInterrupt character ISIG\n\n\nsource\n\n\n#\n\n\nTERMIOS.VKILL\n \n \nConstant\n.\n\n\nKill-line character ICANON\n\n\nsource\n\n\n#\n\n\nTERMIOS.VLNEXT\n \n \nConstant\n.\n\n\nLiteral-next character IEXTEN\n\n\nsource\n\n\n#\n\n\nTERMIOS.VMIN\n \n \nConstant\n.\n\n\nMinimum number of bytes read at once !ICANON\n\n\nsource\n\n\n#\n\n\nTERMIOS.VQUIT\n \n \nConstant\n.\n\n\nQuit character ISIG\n\n\nsource\n\n\n#\n\n\nTERMIOS.VREPRINT\n \n \nConstant\n.\n\n\nReprint-line character ICANON together with IEXTEN\n\n\nsource\n\n\n#\n\n\nTERMIOS.VSTART\n \n \nConstant\n.\n\n\nStart (X-ON) character IXON, IXOFF\n\n\nsource\n\n\n#\n\n\nTERMIOS.VSTATUS\n \n \nConstant\n.\n\n\nStatus character ICANON together with IEXTEN\n\n\nsource\n\n\n#\n\n\nTERMIOS.VSTOP\n \n \nConstant\n.\n\n\nStop (X-OFF) character IXON, IXOFF\n\n\nsource\n\n\n#\n\n\nTERMIOS.VSUSP\n \n \nConstant\n.\n\n\nSuspend character ISIG\n\n\nsource\n\n\n#\n\n\nTERMIOS.VT0\n \n \nConstant\n.\n\n\nVT delay type 0.\n\n\nsource\n\n\n#\n\n\nTERMIOS.VT1\n \n \nConstant\n.\n\n\nVT delay type 1.\n\n\nsource\n\n\n#\n\n\nTERMIOS.VTDLY\n \n \nConstant\n.\n\n\nVertical tab delay\n\n\nsource\n\n\n#\n\n\nTERMIOS.VTIME\n \n \nConstant\n.\n\n\nTime-out value (tenths of a second) !ICANON\n\n\nsource\n\n\n#\n\n\nTERMIOS.VWERASE\n \n \nConstant\n.\n\n\nWord-erase character ICANON together with IEXTEN\n\n\nsource\n\n\n#\n\n\nTERMIOS.cfgetispeed\n \n \nMethod\n.\n\n\ncfgetispeed\n(\nterm\n::\ntermios\n)\n \n-\n \nInt\n\n\n\n\n\n\nReturns the input baud rate stored in the termios structure.\n\n\nsource\n\n\n#\n\n\nTERMIOS.cfgetospeed\n \n \nMethod\n.\n\n\ncfgetospeed\n(\nterm\n::\ntermios\n)\n \n-\n \nInt\n\n\n\n\n\n\nReturns the output baud rate stored in the termios structure.\n\n\nsource\n\n\n#\n\n\nTERMIOS.cfmakeraw\n \n \nMethod\n.\n\n\ncfmakeraw\n(\nterm\n::\ntermios\n)\n\n\n\n\n\n\nSet the terminal to something like the \"raw\" mode of the old Version 7 terminal driver: input is available character by character, echoing is disabled, and all special processing of terminal input and output characters is disabled. The terminal attributes are set as follows:\n\n\nterm.c_iflag \n= ~(IGNBRK | BRKINT | PARMRK | ISTRIP\n\n\n             | INLCR | IGNCR | ICRNL | IXON);\n\n\nterm.c_oflag \n= ~OPOST;\n\n\nterm.c_lflag \n= ~(ECHO | ECHONL | ICANON | ISIG | IEXTEN);\n\n\nterm.c_cflag \n= ~(CSIZE | PARENB);\n\n\nterm.c_cflag |= CS8;\n\n\n\n\n\n\nsource\n\n\n#\n\n\nTERMIOS.cfsetispeed\n \n \nMethod\n.\n\n\ncfsetispeed\n(\nterm\n::\ntermios\n,\n \nspeed\n::\nInteger\n)\n\n\n\n\n\n\nsets the input baud rate stored in the termios structure to speed, which must be one of these constants:\n\n\n\n\nTERMIOS.B0\n\n\nTERMIOS.B50\n\n\nTERMIOS.B75\n\n\nTERMIOS.B110\n\n\nTERMIOS.B134\n\n\nTERMIOS.B150\n\n\nTERMIOS.B200\n\n\nTERMIOS.B300\n\n\nTERMIOS.B600\n\n\nTERMIOS.B1200\n\n\nTERMIOS.B1800\n\n\nTERMIOS.B2400\n\n\nTERMIOS.B4800\n\n\nTERMIOS.B9600\n\n\nTERMIOS.B19200\n\n\nTERMIOS.B38400\n\n\nTERMIOS.B57600\n\n\nTERMIOS.B115200\n\n\nTERMIOS.B230400\n\n\n\n\nThe zero baud rate, B0, is used to terminate the connection. If B0 is specified, the modem control lines shall no longer be asserted. Normally, this will disconnect the line. CBAUDEX is a mask for the speeds beyond those defined in POSIX.1 (57600 and above). Thus, B57600 \n CBAUDEX is nonzero.\n\n\nsource\n\n\n#\n\n\nTERMIOS.cfsetospeed\n \n \nMethod\n.\n\n\ncfsetospeed\n(\nterm\n::\ntermios\n,\n \nspeed\n::\nInteger\n)\n\n\n\n\n\n\nsets the output baud rate stored in the termios structure to speed, which must be one of these constants:\n\n\n\n\nTERMIOS.B0\n\n\nTERMIOS.B50\n\n\nTERMIOS.B75\n\n\nTERMIOS.B110\n\n\nTERMIOS.B134\n\n\nTERMIOS.B150\n\n\nTERMIOS.B200\n\n\nTERMIOS.B300\n\n\nTERMIOS.B600\n\n\nTERMIOS.B1200\n\n\nTERMIOS.B1800\n\n\nTERMIOS.B2400\n\n\nTERMIOS.B4800\n\n\nTERMIOS.B9600\n\n\nTERMIOS.B19200\n\n\nTERMIOS.B38400\n\n\nTERMIOS.B57600\n\n\nTERMIOS.B115200\n\n\nTERMIOS.B230400\n\n\n\n\nThe zero baud rate, B0, is used to terminate the connection. If B0 is specified, the modem control lines shall no longer be asserted. Normally, this will disconnect the line. CBAUDEX is a mask for the speeds beyond those defined in POSIX.1 (57600 and above). Thus, B57600 \n CBAUDEX is nonzero.\n\n\nsource\n\n\n#\n\n\nTERMIOS.cfsetspeed\n \n \nMethod\n.\n\n\ncfsetspeed\n(\nterm\n::\ntermios\n,\n \nspeed\n::\nInt\n)\n\n\n\n\n\n\nis a 4.4BSD extension. It takes the same arguments as cfsetispeed(), and sets both input and output speed.\n\n\nsource\n\n\n#\n\n\nTERMIOS.tcdrain\n \n \nMethod\n.\n\n\ntcdrain\n(\ns\n::\nBase\n.\nLibuvStream\n)\n\n\n\n\n\n\nWait until all output written to file descriptor fd has been transmitted.\n\n\nsource\n\n\n#\n\n\nTERMIOS.tcflow\n \n \nMethod\n.\n\n\ntcflow\n(\ns\n::\nBase\n.\nLibuvStream\n,\n \naction\n::\nInteger\n)\n\n\n\n\n\n\nSuspend transmission or reception of data on the object referred to by fd, depending on the value of action:\n\n\n\n\nTERMIOS.TCOOFF\n to suspend output,\n\n\nTERMIOS.TCOON\n to restart output\n\n\nTERMIOS.TCIOFF\n to suspend input,\n\n\nTERMIOS.TCION\n to restart input.\n\n\n\n\nsource\n\n\n#\n\n\nTERMIOS.tcflush\n \n \nMethod\n.\n\n\ntcflush\n(\ns\n::\nBase\n.\nLibuvStream\n,\n \nqueue\n::\nInteger\n)\n\n\n\n\n\n\nDiscard data written to the object referred to by fd but not transmitted, or data received but not read, depending on the value of queue_selector:\n\n\n\n\nTERMIOS.TCIFLUSH\n flushes data received but not read.\n\n\nTERMIOS.TCOFLUSH\n flushes data written but not transmitted.\n\n\nTERMIOS.TCIOFLUSH\n flushes both data received but not read, and data written but not transmitted.\n\n\n\n\nsource\n\n\n#\n\n\nTERMIOS.tcgetattr\n \n \nMethod\n.\n\n\ntcgetattr\n(\nfd\n::\nRawFD\n,\n \nterm\n::\ntermios\n)\n\n\ntcgetattr\n(\ns\n::\nBase\n.\nLibuvStream\n,\n \nterm\n::\ntermios\n)\n\n\ntcgetattr\n(\nf\n::\nInt\n,\n \nterm\n::\ntermios\n)\n\n\n\n\n\n\nGet the tty attributes for file descriptor fd\n\n\nsource\n\n\n#\n\n\nTERMIOS.tcsendbreak\n \n \nMethod\n.\n\n\ntcsendbreak\n(\ns\n::\nBase\n.\nLibuvStream\n,\n \nduration\n::\nInteger\n)\n\n\n\n\n\n\nTransmit a continuous stream of zero-valued bits for a specific duration, if the terminal is using asynchronous serial data transmission. If duration is zero, it transmits zero-valued bits for at least 0.25 seconds, and not more that 0.5 seconds. If duration is not zero, it sends zero-valued bits for some implementation-defined length of time.\n\n\nIf the terminal is not using asynchronous serial data transmission, tcsendbreak() returns without taking any action.\n\n\nsource\n\n\n#\n\n\nTERMIOS.tcsetattr\n \n \nMethod\n.\n\n\ntcsetattr\n(\ns\n::\nBase\n.\nLibuvStream\n,\n \nwhen\n::\nInteger\n,\n \nterm\n::\ntermios\n)\n\n\n\n\n\n\nSet the tty attributes for file descriptor fd. The when argument determines when the attributes are changed:\n\n\n\n\nTERMIOS.TCSANOW\n to change immediately\n\n\nTERMIOS.TCSADRAIN\n to change after transmitting all queued output\n\n\nTERMIOS.TCSAFLUSH\n to change after transmitting all queued output and discarding all queued input.\n\n\n\n\nsource", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#api", 
            "text": "#  TERMIOS.TERMIOS     Module .  This package provides an interface to the POSIX calls for tty I/O control.  For a complete description of these calls, see the  termios(3)  manual page.  Usage  Example:  using TERMIOS  const T = TERMIOS  term_stdin = T.termios()  T.tcgetattr(stdin, term_stdin)  term_stdin.c_iflag |= T.IGNBRK  T.tcsetattr(stdin, T.TCSANOW, term_stdin)   source  #  TERMIOS.ALTWERASE     Constant .  Use alternate WERASE algorithm  source  #  TERMIOS.BRKINT     Constant .  Map BREAK to SIGINTR  source  #  TERMIOS.BS0     Constant .  BS delay type 0.  source  #  TERMIOS.BS1     Constant .  BS delay type 1.  source  #  TERMIOS.CCAR_OFLOW     Constant .  DCD flow control of output  source  #  TERMIOS.CCTS_OFLOW     Constant .  CTS flow control of output  source  #  TERMIOS.CDSR_OFLOW     Constant .  DSR flow control of output  source  #  TERMIOS.CDTR_IFLOW     Constant .  DTR flow control of input  source  #  TERMIOS.CIGNORE     Constant .  Ignore control flags  source  #  TERMIOS.CLOCAL     Constant .  Ignore modem status lines  source  #  TERMIOS.CR0     Constant .  CR delay type 0.  source  #  TERMIOS.CR1     Constant .  CR delay type 1.  source  #  TERMIOS.CR2     Constant .  CR delay type 2.  source  #  TERMIOS.CR3     Constant .  CR delay type 3.  source  #  TERMIOS.CREAD     Constant .  Enable receiver  source  #  TERMIOS.CRTS_IFLOW     Constant .  RTS flow control of input  source  #  TERMIOS.CS5     Constant .  5 bits (pseudo)  source  #  TERMIOS.CS6     Constant .  6 bits  source  #  TERMIOS.CS7     Constant .  7 bits  source  #  TERMIOS.CS8     Constant .  8 bits  source  #  TERMIOS.CSIZE     Constant .  Character size mask  source  #  TERMIOS.CSTOPB     Constant .  Send 2 stop bits  source  #  TERMIOS.ECHO     Constant .  Enable echoing  source  #  TERMIOS.ECHOCTL     Constant .  Echo control chars as ^(Char)  source  #  TERMIOS.ECHOE     Constant .  Visually erase chars  source  #  TERMIOS.ECHOK     Constant .  Echo NL after line kill  source  #  TERMIOS.ECHOKE     Constant .  Visual erase for line kill  source  #  TERMIOS.ECHONL     Constant .  Echo NL even if ECHO is off  source  #  TERMIOS.ECHOPRT     Constant .  Visual erase mode for hardcopy  source  #  TERMIOS.EXTPROC     Constant .  External processing  source  #  TERMIOS.FF0     Constant .  FF delay type 0.  source  #  TERMIOS.FF1     Constant .  FF delay type 1.  source  #  TERMIOS.FFDLY     Constant .  Form feed delay  source  #  TERMIOS.FLUSHO     Constant .  Output being flushed (state)  source  #  TERMIOS.HUPCL     Constant .  Hang up on last close  source  #  TERMIOS.ICANON     Constant .  Canonicalize input lines  source  #  TERMIOS.ICRNL     Constant .  Map CR to NL (ala CRMOD)  source  #  TERMIOS.IEXTEN     Constant .  Enable DISCARD and LNEXT  source  #  TERMIOS.IGNBRK     Constant .  Ignore BREAK condition  source  #  TERMIOS.IGNCR     Constant .  Ignore CR  source  #  TERMIOS.IGNPAR     Constant .  Ignore (discard) parity errors  source  #  TERMIOS.IMAXBEL     Constant .  Ring bell on input queue full  source  #  TERMIOS.INLCR     Constant .  Map NL into CR  source  #  TERMIOS.INPCK     Constant .  Enable checking of parity errors  source  #  TERMIOS.ISIG     Constant .  Enable signals INTR, QUIT, [D]SUSP  source  #  TERMIOS.ISTRIP     Constant .  Strip 8th bit off chars  source  #  TERMIOS.IUCLC     Constant .  (glibc) Translate upper case input to lower case.  source  #  TERMIOS.IUTF8     Constant .  (macos) maintain state for UTF-8 VERASE  source  #  TERMIOS.IXANY     Constant .  Any char will restart after stop  source  #  TERMIOS.IXOFF     Constant .  Enable input flow control  source  #  TERMIOS.IXON     Constant .  Enable output flow control  source  #  TERMIOS.MDMBUF     Constant .  Old name for CCAR_OFLOW  source  #  TERMIOS.NL0     Constant .  NL type 0.  source  #  TERMIOS.NOFLSH     Constant .  Don't flush after interrupt  source  #  TERMIOS.NOKERNINFO     Constant .  No kernel output from VSTATUS  source  #  TERMIOS.OCRNL     Constant .  Map CR to NL on output  source  #  TERMIOS.OFDEL     Constant .  Fill is DEL, else NUL  source  #  TERMIOS.OFILL     Constant .  Use fill characters for delay  source  #  TERMIOS.OLCUC     Constant .  (glibc) Translate lower case output to upper case.  source  #  TERMIOS.ONLCR     Constant .  Map NL to CR-NL (ala CRMOD)  source  #  TERMIOS.ONLRET     Constant .  NL performs CR function  source  #  TERMIOS.ONOCR     Constant .  No CR output at column 0  source  #  TERMIOS.ONOEOT     Constant .  Discard EOT's (^D) on output)  source  #  TERMIOS.OPOST     Constant .  Enable following output processing   source  #  TERMIOS.OXTABS     Constant .  Expand tabs to spaces  source  #  TERMIOS.PARENB     Constant .  Parity enable  source  #  TERMIOS.PARMRK     Constant .  Mark parity and framing errors  source  #  TERMIOS.PARODD     Constant .  Odd parity, else even  source  #  TERMIOS.PENDIN     Constant .  XXX retype pending input (state)  source  #  TERMIOS.TAB0     Constant .  TAB delay type 0.  source  #  TERMIOS.TAB1     Constant .  TAB delay type 1.  source  #  TERMIOS.TAB2     Constant .  TAB delay type 2.  source  #  TERMIOS.TAB3     Constant .  Expand tabs to spaces.  source  #  TERMIOS.TABDLY     Constant .  Horizontal tab delay  source  #  TERMIOS.TCIFLUSH     Constant .  Discard data received but not yet read.  source  #  TERMIOS.TCIOFF     Constant .  Send a STOP character.  source  #  TERMIOS.TCIOFLUSH     Constant .  Discard all pending data.  source  #  TERMIOS.TCION     Constant .  Send a START character.  source  #  TERMIOS.TCOFLUSH     Constant .  Discard data written but not yet sent.  source  #  TERMIOS.TCOOFF     Constant .  Suspend output.  source  #  TERMIOS.TCOON     Constant .  Restart suspended output.  source  #  TERMIOS.TCSADRAIN     Constant .  Drain output, then change  source  #  TERMIOS.TCSAFLUSH     Constant .  Drain output, flush input  source  #  TERMIOS.TCSANOW     Constant .  Make change immediate  source  #  TERMIOS.TCSASOFT     Constant .  Flag - don't alter h.w. state  source  #  TERMIOS.TOSTOP     Constant .  Stop background jobs from output  source  #  TERMIOS.VDISCARD     Constant .  Discard character IEXTEN  source  #  TERMIOS.VDSUSP     Constant .  Delayed suspend character ISIG together with IEXTEN  source  #  TERMIOS.VEOF     Constant .  End-of-file character ICANON  source  #  TERMIOS.VEOL     Constant .  End-of-line character ICANON  source  #  TERMIOS.VEOL2     Constant .  Second EOL character ICANON together with IEXTEN  source  #  TERMIOS.VERASE     Constant .  Erase character ICANON  source  #  TERMIOS.VINTR     Constant .  Interrupt character ISIG  source  #  TERMIOS.VKILL     Constant .  Kill-line character ICANON  source  #  TERMIOS.VLNEXT     Constant .  Literal-next character IEXTEN  source  #  TERMIOS.VMIN     Constant .  Minimum number of bytes read at once !ICANON  source  #  TERMIOS.VQUIT     Constant .  Quit character ISIG  source  #  TERMIOS.VREPRINT     Constant .  Reprint-line character ICANON together with IEXTEN  source  #  TERMIOS.VSTART     Constant .  Start (X-ON) character IXON, IXOFF  source  #  TERMIOS.VSTATUS     Constant .  Status character ICANON together with IEXTEN  source  #  TERMIOS.VSTOP     Constant .  Stop (X-OFF) character IXON, IXOFF  source  #  TERMIOS.VSUSP     Constant .  Suspend character ISIG  source  #  TERMIOS.VT0     Constant .  VT delay type 0.  source  #  TERMIOS.VT1     Constant .  VT delay type 1.  source  #  TERMIOS.VTDLY     Constant .  Vertical tab delay  source  #  TERMIOS.VTIME     Constant .  Time-out value (tenths of a second) !ICANON  source  #  TERMIOS.VWERASE     Constant .  Word-erase character ICANON together with IEXTEN  source  #  TERMIOS.cfgetispeed     Method .  cfgetispeed ( term :: termios )   -   Int   Returns the input baud rate stored in the termios structure.  source  #  TERMIOS.cfgetospeed     Method .  cfgetospeed ( term :: termios )   -   Int   Returns the output baud rate stored in the termios structure.  source  #  TERMIOS.cfmakeraw     Method .  cfmakeraw ( term :: termios )   Set the terminal to something like the \"raw\" mode of the old Version 7 terminal driver: input is available character by character, echoing is disabled, and all special processing of terminal input and output characters is disabled. The terminal attributes are set as follows:  term.c_iflag  = ~(IGNBRK | BRKINT | PARMRK | ISTRIP               | INLCR | IGNCR | ICRNL | IXON);  term.c_oflag  = ~OPOST;  term.c_lflag  = ~(ECHO | ECHONL | ICANON | ISIG | IEXTEN);  term.c_cflag  = ~(CSIZE | PARENB);  term.c_cflag |= CS8;   source  #  TERMIOS.cfsetispeed     Method .  cfsetispeed ( term :: termios ,   speed :: Integer )   sets the input baud rate stored in the termios structure to speed, which must be one of these constants:   TERMIOS.B0  TERMIOS.B50  TERMIOS.B75  TERMIOS.B110  TERMIOS.B134  TERMIOS.B150  TERMIOS.B200  TERMIOS.B300  TERMIOS.B600  TERMIOS.B1200  TERMIOS.B1800  TERMIOS.B2400  TERMIOS.B4800  TERMIOS.B9600  TERMIOS.B19200  TERMIOS.B38400  TERMIOS.B57600  TERMIOS.B115200  TERMIOS.B230400   The zero baud rate, B0, is used to terminate the connection. If B0 is specified, the modem control lines shall no longer be asserted. Normally, this will disconnect the line. CBAUDEX is a mask for the speeds beyond those defined in POSIX.1 (57600 and above). Thus, B57600   CBAUDEX is nonzero.  source  #  TERMIOS.cfsetospeed     Method .  cfsetospeed ( term :: termios ,   speed :: Integer )   sets the output baud rate stored in the termios structure to speed, which must be one of these constants:   TERMIOS.B0  TERMIOS.B50  TERMIOS.B75  TERMIOS.B110  TERMIOS.B134  TERMIOS.B150  TERMIOS.B200  TERMIOS.B300  TERMIOS.B600  TERMIOS.B1200  TERMIOS.B1800  TERMIOS.B2400  TERMIOS.B4800  TERMIOS.B9600  TERMIOS.B19200  TERMIOS.B38400  TERMIOS.B57600  TERMIOS.B115200  TERMIOS.B230400   The zero baud rate, B0, is used to terminate the connection. If B0 is specified, the modem control lines shall no longer be asserted. Normally, this will disconnect the line. CBAUDEX is a mask for the speeds beyond those defined in POSIX.1 (57600 and above). Thus, B57600   CBAUDEX is nonzero.  source  #  TERMIOS.cfsetspeed     Method .  cfsetspeed ( term :: termios ,   speed :: Int )   is a 4.4BSD extension. It takes the same arguments as cfsetispeed(), and sets both input and output speed.  source  #  TERMIOS.tcdrain     Method .  tcdrain ( s :: Base . LibuvStream )   Wait until all output written to file descriptor fd has been transmitted.  source  #  TERMIOS.tcflow     Method .  tcflow ( s :: Base . LibuvStream ,   action :: Integer )   Suspend transmission or reception of data on the object referred to by fd, depending on the value of action:   TERMIOS.TCOOFF  to suspend output,  TERMIOS.TCOON  to restart output  TERMIOS.TCIOFF  to suspend input,  TERMIOS.TCION  to restart input.   source  #  TERMIOS.tcflush     Method .  tcflush ( s :: Base . LibuvStream ,   queue :: Integer )   Discard data written to the object referred to by fd but not transmitted, or data received but not read, depending on the value of queue_selector:   TERMIOS.TCIFLUSH  flushes data received but not read.  TERMIOS.TCOFLUSH  flushes data written but not transmitted.  TERMIOS.TCIOFLUSH  flushes both data received but not read, and data written but not transmitted.   source  #  TERMIOS.tcgetattr     Method .  tcgetattr ( fd :: RawFD ,   term :: termios )  tcgetattr ( s :: Base . LibuvStream ,   term :: termios )  tcgetattr ( f :: Int ,   term :: termios )   Get the tty attributes for file descriptor fd  source  #  TERMIOS.tcsendbreak     Method .  tcsendbreak ( s :: Base . LibuvStream ,   duration :: Integer )   Transmit a continuous stream of zero-valued bits for a specific duration, if the terminal is using asynchronous serial data transmission. If duration is zero, it transmits zero-valued bits for at least 0.25 seconds, and not more that 0.5 seconds. If duration is not zero, it sends zero-valued bits for some implementation-defined length of time.  If the terminal is not using asynchronous serial data transmission, tcsendbreak() returns without taking any action.  source  #  TERMIOS.tcsetattr     Method .  tcsetattr ( s :: Base . LibuvStream ,   when :: Integer ,   term :: termios )   Set the tty attributes for file descriptor fd. The when argument determines when the attributes are changed:   TERMIOS.TCSANOW  to change immediately  TERMIOS.TCSADRAIN  to change after transmitting all queued output  TERMIOS.TCSAFLUSH  to change after transmitting all queued output and discarding all queued input.   source", 
            "title": "API"
        }
    ]
}